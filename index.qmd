---
title: "Compilation of Machine Learning Reports"
subtitle: "Supporting information of Montero-Tena et al 2025, *Uncovering the rules governing recombination positioning in oilseed rape using multi-omics data and machine learning*"
author: Jose A Montero-Tena
date: "`r Sys.Date()`"
format:
  html:
    toc: true
    toc-location: left
    self-contained: true
    embed-resources: true
execute:
  freeze: auto
  cache: false
---

```{r setup, include=FALSE}
# Load necessary library
if (!requireNamespace("stringr", quietly = TRUE)) {
  install.packages("stringr")
}
library(stringr)

# Function to find the first file matching a pattern
find_first_match = function(pattern, files) {
  match = files[stringr::str_detect(files, pattern)]
  if (length(match) > 0) {
    return(match[1])
  } else {
    return(NA) # Return NA if no match is found
  }
}
```

* [Statistical analysis of features:](preprocessing/preprocessing.html) Histograms, Student's *t*-test, hierarchical clustering, Pearson's rank correlation, etc.

* Machine learning models for classification:

```{r include = FALSE}
dir = "classification/boosted_trees/"
# Find the first file for each pattern
impurity_file = find_first_match("impurity", list.files(dir))
permutation_file = find_first_match("permutation", list.files(dir))
coefficient_file = find_first_match("coefficient", list.files(dir))
```

  * [Boosted Trees](classification/boosted_trees/`r impurity_file`)

```{r include = FALSE}
dir = "classification/decision_tree/"
# Find the first file for each pattern
impurity_file = find_first_match("impurity", list.files(dir))
permutation_file = find_first_match("permutation", list.files(dir))
coefficient_file = find_first_match("coefficient", list.files(dir))
```

  * [Decision Tree](classification/decision_tree/`r impurity_file`)

```{r include = FALSE}
dir = "classification/logistic_reg/"
# Find the first file for each pattern
impurity_file = find_first_match("impurity", list.files(dir))
permutation_file = find_first_match("permutation", list.files(dir))
coefficient_file = find_first_match("coefficient", list.files(dir))
```

  * [Logistic Regression](classification/logistic_reg/`r coefficient_file`)

```{r include = FALSE}
dir = "classification/rand_forest/"
# Find the first file for each pattern
impurity_file = find_first_match("impurity", list.files(dir))
permutation_file = find_first_match("permutation", list.files(dir))
coefficient_file = find_first_match("coefficient", list.files(dir))
```
         
  * [Random Forest](classification/rand_forest/`r impurity_file`)


* [Correlation analysis of feature importance](feature_importance/feature_importance.html)
